# Upgrade commands between versions are configured in this file, and executed in bash (FROM ubuntu:20.04)
# Options:
# - operations: will run before applying all
# - releases.*.operations will run just in time before syncing that particular release takes place
#
# NOTE:
# - $(...) can't be used, but backticks can: `...`
# - no comments allowed as commands get transformed into oneline
#
# Special case for development:
#
# When a version is set to "dev" it will be selected no matter what. This allows to test an upgrade record's effect.
# (don't forget to set it to the next release version before releasing!)

changes:
  - version: 0.16.9
    releases:
      external-secrets:
        operations:
          - helm -n vault list | grep kubernetes-external-secrets-6.1.0 >/dev/null && helm -n vault uninstall kubernetes-external-secrets && kubectl apply -f $PWD/charts/kubernetes-external-secrets/crds || true
  - version: dev # TODO: potentially published in next release (0.16.* or 0.17.0 depending on breaking changes introduced)
    operations:
      # we moved drone to its own namespace
      - helm -n team-admin list | grep drone && helm -n team-admin uninstall drone || true
      # we need to patch ownership of all podmonitors which are now published by team-ns-* instead of prometheus-*
      - |
        for id in "{{ keys (omit .teamConfig "admin") | join " " }}"; do 
          for p in `kubectl -n "team-$id" get podmonitor`; do
            kubectl -n team-$id patch podmonitor $p --type merge -p {"annotations":{"meta.helm.sh/release-name":"team-ns-$id","meta.helm.sh/release-namespace":"team-$id"}}
          done
        done
